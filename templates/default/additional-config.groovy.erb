dataSource.username = "<%= node['biodiv']['database-user'] %>"
dataSource.password = "<%= node['biodiv']['database-password'] %>"


grails.plugin.springsecurity.ui.register.postRegisterUrl  = "http://<%= node.biodiv.servername %>/<%= node.biodiv.appname %>/user/myprofile" // use defaultTargetUrl if not set
NamesIndexerService.FILENAME = "<%= node.biodiv.appname %>_tstLookup.dat";


speciesPortal {
	observations { filePicker.key = "<%= node.biodiv.filePickerKey %>" }
	app {
		twitterUrl = "<%= node.biodiv.twitterUrl %>"
        facebookUrl = "<%= node.biodiv.facebookUrl %>"
        feedbackFormUrl = "<%= node.biodiv.feedbackFormUrl %>"		
	}
}

environments {
	kk {
		servername = "<%= node.biodiv.servername %>"
		appName = "<%= node.biodiv.appname %>"
		dataSource { url = "jdbc:postgresql://127.0.0.1:5432/<%= node['biodiv']['database'] %>" }
		grails.serverURL = "http://<%= node.biodiv.servername %>/${appName}"
		
		grails.plugin.springsecurity.facebook.apiKey="Invalid"
       	grails.plugin.springsecurity.facebook.appId="<%= node.biodiv.facebookAppId %>"
       	grails.plugin.springsecurity.facebook.secret="<%= node.biodiv.facebookSecret %>"

		speciesPortal {
			app.rootDir = "<%= node['biodiv']['data'] %>"
			data.rootDir = "<%= node['biodiv']['data'] %>/data"
			names.parser.serverURL = "127.0.0.1"
			
			localeLanguages = [['id':123,'name':'English','code':'eng', 'twoletter':'en'], ['id':137,'name':'French','code':'fre', 'twoletter':'fr']]
           	hideLanguages = <%= node.biodiv.hideLanguages %>

           	mobileAppVersion{
                andriod="<%= node.biodiv.androidVersion %>"
                ios="<%= node.biodiv.iosVersion %>"
            }
			
			resources {
				rootDir = "<%= node['biodiv']['data'] %>/img"
				serverURL = "http://<%= node.biodiv.servername %>/${appName}/img"
			}
			nameSearch.indexStore = "<%= node['biodiv']['data'] %>/data/names"
			observations {
				rootDir = "<%= node['biodiv']['data'] %>/observations"
				serverURL = "http://<%= node.biodiv.servername %>/${appName}/observations"
				observationDownloadDir = "<%= node['biodiv']['data'] %>/app-conf/data/datarep/downloads/observations"
				//filePicker.key = 'Az2MIh1LOQC2OMDowCnioz'
			}
			userGroups {
				rootDir = "<%= node['biodiv']['data'] %>/userGroups"
				serverURL = "http://<%= node.biodiv.servername %>/${appName}/userGroups"
			}
			users {
				rootDir = "<%= node['biodiv']['data'] %>/users"
				serverURL = "http://<%= node.biodiv.servername %>/${appName}/users"
			}

			content{
				rootDir = "<%= node['biodiv']['data'] %>/content"
				serverURL = "http://<%= node.biodiv.servername %>/${appName}/content"
			}
			maps { serverURL = "http://<%= node.biodiv.servername %>/${appName}/maps" }
			usersResource {
				rootDir = "<%= node['biodiv']['data'] %>/usersRes"
				serverURL = "http://<%= node.biodiv.servername %>/${appName}/usersRes"
			}

			search.serverURL="http://<%= node.biodiv.servername %>:8080/solr"
			grails {
				mail {
					host = "<%= node.biodiv.smtphost %>"
					port = <%= node.biodiv.smtpport %>
				}
			}
			ibp {
				facebook {
					appId=  "<%= node.biodiv.facebookAppId %>"
					secret=  "<%= node.biodiv.facebookSecret %>"
				}
				supportEmail = "<%= node.biodiv.supportEmail %>"
			}
			ibpMapDatabase {
				username = "<%= node['biodiv']['ibp-database-user'] %>"
				password = "<%= node['biodiv']['ibp-database-password'] %>"
			}
		} // speciesPortal  closed


		// Added by sathish on 3rd November 

	grails{
		plugin{
			springsecurity{
				rest{
					oauth{
						frontendCallbackUrl = { String tokenValue -> "http://<%= node.biodiv.servername %>/login/authSuccess?token=${tokenValue}" }
						google {
				    	  client = species.auth.Google2Client
						  key='<%= node["oauth"]["google"]["key"] %>'
				          secret = '<%= node["oauth"]["google"]["secret"] %>'
				          scope = org.pac4j.oauth.client.Google2Client.Google2Scope.EMAIL_AND_PROFILE
				          defaultRoles = ['ROLE_USER', 'ROLE_GOOGLE']
				        }
				        facebook {
					      client = species.auth.FacebookClient
				          key = '<%= node["oauth"]["facebook"]["key"] %>'
				          secret = '<%= node["oauth"]["google"]["secret"] %>'
				          scope = "email,user_about_me,user_location,user_activities,user_hometown,manage_notifications,user_website,publish_stream"
				          fields = 'id,name,username,email'
				          defaultRoles = ['ROLE_USER', 'ROLE_FACEBOOK']
						}
					}
				}
			}
		}	
	}
	def appName = grails.util.Metadata.current.'app.name'
	def baseURL = grails.serverURL.replace('/biodiv','')
	oauth {
		debug = true
		providers {
			// for Google OAuth 2.0         
			google {
				api = "org.grails.plugin.springsecurity.oauth.GoogleApi20"
				key = '<%= node["oauth"]["google"]["key"] %>'
				secret = '<%= node["oauth"]["google"]["secret"] %>'
				successUri = '/oauth/google/success'
				failureUri = '/oauth/google/failure'
				callback = "${baseURL}/oauth/google/callback"
				scope = 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email'
			}
		}
	}

	// Addded for Recaptcha by sathish

	 recaptcha {
            // These keys are generated by the ReCaptcha service
            publicKey = '<%= node["recaptcha"]["publicKey"] %>'
            privateKey = '<%= node["recaptcha"]["privateKey"] %>'

            // Include the noscript tags in the generated captcha
            includeNoScript = true

            // Include the required script tag with the generated captcha
            includeScript = true

            // Set to false to disable the display of captcha
            enabled = true
        }



	

		ibp.domain="<%= node.biodiv.servername %>"
		//wgp.domain="<%= node.biodiv.servername %>"

		ckeditor {
			upload {
				baseurl = "/newsletters"
				basedir = "${speciesPortal.app.rootDir}/newsletters/"

				image.browser = true
				image.upload = true
				image.allowed = ['jpg', 'gif', 'jpeg', 'png']
				image.denied = []
			}
		}
		log4jConsoleLogLevel = Priority.DEBUG

		redissonConfig="<%= node['biodiv']['data'] %>/redisson.yaml"

	}
}

